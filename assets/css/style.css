@charset "UTF-8";
/*ページ内検索　command + f*/

/* 
Base style 
*/
body {
  font-family: "Noto Sans JP", "Helvetica Neue", "Helvetica", "Hiragino Sans",
    "Hiragino Kaku Gothic ProN", "Arial", "Yu Gothic", "Meiryo", "sans-serif";
  font-size: 15px;
  line-height: 1.5;
  color: #333;
}
label,
input,
select,
textarea,
button {
  cursor: pointer; /*マウスポインターをポインターにする(指マークになる）*/
}
button {
  border: 0; /*ボタンの枠線を消す*/
}
/* 
grid 
*/
.grid {
  margin: 0; /*ulタグにデフォルトでmarginがあるので0にする*/
  padding: 0; /*ulタグにデフォルトでpaddingがあるので0にする*/
  display: flex;
  align-items: center; /*display:flexの子要素を中央に配置する*/
  justify-content: center; /*display:flex; が指定されている場合に効果を発揮*/
}
.grid-item {
  list-style: none; /*デフォルトでlist-style（・）があるのでnoneにする*/
}
.grid-cols-2 > .grid-item {
  /*2カラムの場合*/ /* >は子孫要素を指定する*/
  width: 50%;
}
.grid-cols-3 > .grid-item {
  /*3カラムの場合*/
  width: 33.33333333333333%;
}
.grid-cols-4 > .grid-item {
  /*4カラムの場合*/
  width: 25%;
}
@media screen and (max-width: 768px){
    .grid {
        display: block;
    }
    .grid-col-2 > .grid-item,
    .grid-col-3 > .grid-item,
    .grid-col-4 > .grid-item {
        width: 100%;
        margin: 20px 0;
    }

}


/* 
section 
*/
.section {
  /* なるべく同じセクションを拡張するとコードがスッキリする */
  padding: 30px 15px;
}
.section-secondary {
  background-color: #efefef;
}
.section-headline {
  text-align: center;
  font-size: 40px;
  font-weight: bold;
  margin: 0 0 40px;
}
.section-button {
  margin-top: 40px;
  text-align: center;
}

/* 
header 
*/
.header {
  width: 100%;
  display: flex;
  justify-content: space-between; /*子要素を両端に配置する*/
  align-items: center; /*子要素を中央に配置する*/
  padding: 0 15px;
  position: fixed; /*他の要素と関係なく常にアイテムを固定する*/
  z-index: 10; /*ヘッダーを最前面に配置する。何よりも前面にヘッダーが来るようにする*/
  top: 0; /*上端に配置する*/
  left: 0; /*左端に配置する*/
}
.header-logo {
  margin: 0;
  color: transparent; /*文字を透明にする。linkのデフォルトのブルーを透明にする*/
}
.header-logo > a {
  display: block; /*リンクタグはインラインなのでブロック要素にする*/
}
/*.header-nav {}*/
.header-nav-list {
  margin: 0;
  display: flex;
  justify-content: space-between; /*子要素を両端に配置する*/
  align-items: center; /*子要素を中央に配置する*/
}
/*.header-nav-item {}*/
.header-nav-item > a {
  display: block; /*リンクタグはインラインなのでブロック要素にする*/
  padding: 10px;
  color: #333; /*リンクタグの色がデフォルトだと青なので#333にする*/
  text-decoration: none; /*リンクタグのデフォルトのアンダーラインを消す*/
  font-weight: bold;
  border-bottom: 2px solid transparent; /*下線を透明にする*/
  transition: border-color 0.25s; /*下線の色を0.25秒で変化させる*/
}
.header-nav-item > a:hover {
  border-bottom: 2px solid #333; /*下線の色を#333にする*/
}

/* 
hero 
*/
.hero {
  width: 100vw; /*ビューポートの横幅を100%にする*/
  height: 100vh; /*ビューポートの縦幅を100%にする*/
  position: relative; /*子要素の基準位置になる。絶対配置するために必要*/
  overflow: hidden; /*子要素がはみ出したら隠す*/
}
.hero > strong {
  position: absolute; /*絶対配置する*/
  z-index: 3; /*要素の重なり順を指定する。大きい数ほど前面に配置される。Hello Worldを最前面に配置したいので3*/
  top: 50%; /*上から50%の位置に配置する*/
  left: 50%; /*左から50%の位置に配置する*/
  transform: translate(
    -50%,
    -50%
  ); /*要素を中央に配置する。top,left,transformの３つが揃うと要素を中央に配置できるテクニック*/
  font-size: 120px;
  color: #fff; /*文字の色*/
  width: 100%; /*横幅を親要素いっぱいに広げる*/
  text-align: center;
}
.hero > video {
  position: absolute; /*絶対配置する*/
  z-index: 1;
  width: auto;
  height: 105%;
}
.hero-particles {
  position: absolute;
  z-index: 2; /*ビデオよりは上に行きたいので２にする*/
  width: 100%;
  height: 100%;
}

/* 
about 
*/
.about {
  margin: 0;
  display: flex;
}
/*.about-image {}*/
.about-caption {
  padding-left: 15px;
}
.about-headline {
  margin: 0 0 20px;
  font-size: 30px;
}
/*.about-description {}*/
@media screen and (max-width: 768px){
    .about {
        display: block;
    }
    .about-image {
        max-width: 100%;
        margin-bottom: 20px;
    }
    .about-headline {
        font-size: 20px;
        text-align: center;
    }
}

/* 
feature 
*/
.feature {
  text-align: center;
  padding: 0 15px;
}
.feature-headline {
  font-weight: bold;
  margin: 0 0 20px;
}
.feature-image {
  margin: 0 0 20px;
}
.feature-description {
  margin: 0;
  text-align: left;
}

/* 
card 
*/
.card {
  padding: 0 10px;
}
.card-link {
  display: block; /*リンクタグはインラインなのでブロック要素にする*/
  color: #333; /*リンクタグの色がデフォルトだと青なので#333にする*/
  text-decoration: none; /*リンクタグのデフォルトのアンダーラインを消す*/
  position: relative; /*子要素の基準位置になる。絶対配置するために必要*/
  transition: background-color 0.25s; /*背景色を0.25秒で変化させる*/
}
.card-link:hover {
  background-color: #eee; /*ホバーしたら背景色を#eeeにする*/
}
.card-label {
  position: absolute; /*relativeの子要素。絶対配置にする*/
  left: 0;
  top: 0;
  background-color: #999;
  color: #fff;
  display: block;
  padding: 5px 10px;
  font-size: 12px;
}
.card-image {
  width: 100%; /*横幅を親要素いっぱいに広げる*/
  height: auto; /*縦幅を自動調整して、画像の比率を維持する*。縦幅を固定してしまうと、画像が歪んで表示されることがある。
    auto を指定すると、横幅の変化に応じて縦幅も自然に変わるため、画像が歪むことがない。*/
}
.card-info {
  padding: 5px 10px;
}
/*.card-time {}*/
.card-headline {
  margin: 0;
}

/* 
avator 
*/
.avator {
  display: flex;
  flex-direction: row-reverse; /*子要素を逆順に配置する*/
  align-items: center; /*子要素を中央に配置する*/
  justify-content: start; /*子要素を左に配置する*/
  padding: 10px;
}
.avator-name {
  font-weight: bold;
  padding-left: 15px;
}
.avator-image {
  margin: 0;
  border-radius: 50%;
  overflow: hidden; /* border-radiusとoverflowを同時に指定すると、角丸になる*/
}

/* 
button 
*/
.button {
  display: inline-block; /*インライン要素でありブロックレベル要素の振る舞いもできる。上下左右にpadding,marginが効く*/
  color: #fff;
  font-weight: bold;
  background-color: #333;
  text-align: center;
  margin: 30px 0; /* 上下が30px、左右が0px */
  padding: 15px 60px; /*ボタンの余白*/
  text-decoration: none; /*ボタンのデフォルトのアンダーラインを消す*/
  border-radius: 5px; /*ボタンの角を丸くする*/
  box-shadow: 5px 5px 0 #bbb; /*ボタンの影*/
  transition: box-shadow 0.25s; /*ボタンの影を0.25秒で変化させる*/
}
.button:hover {
  box-shadow: 0 0 0 #bbb; /*ボタンの影を消す*/
}
.button.button-submission {
  background-color: #92d3ca;
}
/* 
.serect, .input , .radio, .textarea
*/

.select {
  border-radius: 5px;
  padding: 10px;
  border: 1px solid #ccc;
  min-width: 500px; /*横幅を最低でも500pxに維持する*/
}
.input {
  border-radius: 5px;
  padding: 10px;
  border: 1px solid #ccc;
  min-width: 500px;
}
.radio {
  margin: 0 10px;
}
.textarea {
  border-radius: 5px;
  padding: 10px;
  border: 1px solid #ccc;
  min-width: 500px;
  min-height: 100px; /*縦幅を最低でも100pxに維持する*/
}
@media screen and (max-width: 768px){
    .select,
    .input,
    .textarea {
        min-width: auto;
        width: 100%;

    }
}

/*
form
*/
/*.form{}*/
.form-table {
  margin: 0 auto; /*ブロックレベル要素を中央寄せしたい時によく使う。中央に配置する。ブロックレベル要素のタグに対して、marginが上下は０だけど、左右をautoにすると中央寄せになる*/
}
/*.form-table tr {*/
.form-table th {
  text-align: 10px; /*表の見出しを右寄せにする*/
}
.form-table td {
  padding: 10px; /*表のデータを左寄せにする*/
}
.form-button {
  margin-top: 20px;
  text-align: center;
}
@media screen and (max-width: 768px){
    .form-table,
    .form-table tbody,/*デフォルトのtbodyが悪さをしているので追加*/
    .form-table tr,
    .form-table th,
    .form-table td {
        display: block;
    }
}

/*
works
*/
.works {
  margin: 40px;
  padding: 20px;
  text-align: center;
}
.works > img {
  margin: 0 15px;
}

/*
footer
*/
.footer {
  background-color: #333;
  color: #fff;
}
.footer-map {
  margin: 0; /*デフォルトのマージンを消す*/
  padding: 40px 15px;
  display: flex;
  align-items: center;
  justify-content: center;
}
.footer-map > iframe {
  width: 60%;
}
.footer-mapinfo {
  /*上下合わせて合計100％*/
  width: 40%;
  padding: 15px; /*横幅40%,padding30pxが入っている。*/
}
.footer-maplogo {
  font-size: 25px;
  font-weight: bold;
}
.footer-maplogo > svg {
  fill: transparent; /*svgの色を透明にする*/
  margin-right: 10px;
}
.footer-mapaddress {
  font-style: normal; /*デフォルトでイタリックになっているのでnormalにする*/
}
.footer-mapaddress > a {
  color: #fff;
}
.footer-line {
  border-color: #444;
}
.footer-copy {
  display: block; /*ブロックレベル要素にする*/
  text-align: center;
  padding: 10px;
}
